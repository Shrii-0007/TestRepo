trigger:
- main

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    pool:
      name: 'Default'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '3.0'
        installationPath: $(Agent.ToolsDirectory)/dotnet
        includePreviewVersions: true
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

- stage: PreApproval
  jobs:
  - deployment: PreApprovalJob
    displayName: 'Pre-Approval Job'
    pool:
      name: 'Default'
    environment: 'dev' # Replace with your environment name
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo 'Pre-Approval Job'

- stage: Deploy
  jobs:
  - deployment: DeployJob
    displayName: 'Deploy Job'
    pool:
      name: 'Default'
    environment: 'dev' # Replace with your environment name
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo 'Deploy Job'

- stage: Release
  jobs:
  - deployment: ReleaseJob
    displayName: 'Release Job'
    pool:
      name: 'Default'
    environment: 'dev' # Replace with your environment name
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo 'Release Job'
